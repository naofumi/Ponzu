= form_for(@submission,
             :html => {:data => { :remote => true,
                                  :ks_insert_response => true,
                                  "invalidates-keys" => invalidated_paths(@submission.presentations)}}) do |f|
  - if @submission.errors.any?
    #error_explanation
      %h2
        = pluralize(@submission.errors.count, "error")
        prohibited this submission from being saved:

      %ul
        - @submission.errors.full_messages.each do |msg|
          %li= msg

  #changed_alert

  .field
    = f.label :submission_number
    %br/
    - if can? :manage, Submission
      = f.text_field :submission_number
    - else
      = @submission.submission_number
  .field
    = f.label :en_title
    %br/
    = f.text_field :en_title, 
                   :onchange => "document.getElementById('changed_alert').textContent = 'shit'"
  .field
    = f.label :jp_title
    %br/
    = f.text_field :jp_title
  .field
    = f.label :external_link
    %br/
    = f.text_field :external_link
  .field
    = f.label :jp_abstract
    %br/
    = f.text_area :jp_abstract, :style => "height:300px"
  .field
    = f.label :en_abstract
    %br/
    = f.text_area :en_abstract, :style => "height:300px"
  .field
    = f.label :keywords
    %br/
    - 5.times do |i|
      = text_field_tag "submission[keywords][]", 
                       @submission.keywords && @submission.keywords[i]
      %br/
  .field
    = f.label :corresponding_email
    %br/
    = f.text_field :corresponding_email
  .field
    = f.label :show_email
    %br/
    = f.check_box :show_email


  - if can? :manage, Submission
    .field
      = f.label :disclose_at
      %br/
      = f.datetime_select :disclose_at

  / The session_id field is used to automatically create a Presentation object
  / linking this Submission to a Session.
  = hidden_field_tag :session_id, params[:session_id]
  .actions
    = f.submit
